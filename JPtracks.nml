# 0 "src/index.pnml"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "src/index.pnml"
# 1 "src/import/constructor.pnml" 1
# 2 "src/index.pnml" 2

# 1 "src/import/grfInfo.pnml" 1
    grf {
        grfid :"YZ\AA\02";
        name :string(STR_GRF_NAME);
        desc :string(STR_GRF_DESC);
        url :string(STR_GRF_URL);
        version :1;
        min_compatible_version :0;

 param {
  param_wire {
    type: int;
    name: string(STR_PARAM_WIRE);
    desc: string(STR_PARAM_WIRE_DESC);
    min_value: 0;
    max_value: 1;
    def_value: 0;
    names: {
         0: string(STR_PARAM_WIRE_1);
         1: string(STR_PARAM_WIRE_2);
      };
    }
  }







 param {
  param_current {
    type: bool;
    name: string(STR_PARAM_CURRENT);
    desc: string(STR_PARAM_CURRENT_DESC);
    }
  }

  param {
    param_cost {
      type: int;
      name: string(STR_COST);
      desc: string(STR_COST);
      min_value: 0;
      max_value: 4;
      def_value: 2;
      names: {
          0: string(STR_COST_1);
          1: string(STR_COST_2);
          2: string(STR_COST_3);
          3: string(STR_COST_4);
          4: string(STR_COST_5);
        };
      }
  }
# 70 "src/import/grfInfo.pnml"
  param {
  param_tracks_1 {
    type: int;
    name: string(STR_PARAM_TRACKS_1);
    desc: string(STR_PARAM_TRACKS_1);
    min_value: 0;
    max_value: 3;
    def_value: 3;
    names: {
                  0: string(STR_DISABLED);
         1: string(STR_PARAM_TRACKS_1_1);
         2: string(STR_PARAM_TRACKS_1_2);
         3: string(STR_PARAM_TRACKS_1_3);
      };
    }
  }
  param {
  param_tracks_2 {
    type: bool;
    name: string(STR_PARAM_TRACKS_2);
    desc: string(STR_PARAM_TRACKS_2);
        def_value: 1;
    }
  }
  param {
  param_tracks_3 {
    type: int;
    name: string(STR_PARAM_TRACKS_3);
    desc: string(STR_PARAM_TRACKS_3);
    min_value: 0;
    max_value: 3;
    def_value: 2;
    names: {
         0: string(STR_DISABLED);
         1: string(STR_PARAM_TRACKS_3_1);
         2: string(STR_PARAM_TRACKS_3_2);
         3: string(STR_PARAM_TRACKS_3_3);
      };
    }
  }
  param {
  param_tracks_4 {
    type: bool;
    name: string(STR_PARAM_TRACKS_4);
    desc: string(STR_PARAM_TRACKS_4);
    def_value: 1;
        }
  }
  param {
  param_tracks_5 {
    type: bool;
    name: string(STR_PARAM_TRACKS_5);
    desc: string(STR_PARAM_TRACKS_5);
    def_value: 1;
        }
  }
  param {
  param_tracks_6 {
    type: bool;
    name: string(STR_PARAM_TRACKS_6);
    desc: string(STR_PARAM_TRACKS_6);
    def_value: 1;
        }
  }
# 150 "src/import/grfInfo.pnml"
  param 15 {
  param_tracks_9 {
    type: bool;
    name: string(STR_PARAM_TRACKS_9);
    desc: string(STR_PARAM_TRACKS_9);
    def_value: 1;
        }
  }
  param 16 {
  param_tracks_10 {
    type: int;
    name: string(STR_PARAM_TRACKS_10);
    desc: string(STR_PARAM_TRACKS_10);
    min_value: 0;
    max_value: 1;
    def_value: 0;
    names: {
         0: string(STR_PARAM_TRACKS_10_1);
         1: string(STR_PARAM_TRACKS_10_2);
      };
    }
  }
  param {
  param_tracks_11 {
    type: bool;
    name: string(STR_PARAM_TRACKS_11);
    desc: string(STR_PARAM_TRACKS_11);
        def_value: 1;
    }
  }

  param {
  param_fences_1 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_1)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
    max_value: 4;
    def_value: 0;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
  param {
  param_fences_2 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_1)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
    max_value: 4;
    def_value: 1;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
  param {
  param_fences_3 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_1)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_1)));
        min_value: 0;
    max_value: 4;
    def_value: 2;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
  param {
  param_fences_4 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_3)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_1, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
    max_value: 4;
    def_value: 0;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
  param {
  param_fences_5 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_3)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_2, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
    max_value: 4;
    def_value: 1;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
  param {
  param_fences_6 {
    type: int;
    name: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_3)));
    desc: string(STR_PARAM_FENCES, string(STR_PARAM_TYPE_3, string(STR_PARAM_TRACKS_3)));
        min_value: 0;
    max_value: 4;
    def_value: 2;
    names: {
         0: string(STR_PARAM_FENCE_0);
         1: string(STR_PARAM_FENCE_1);
         2: string(STR_PARAM_FENCE_2);
         3: string(STR_PARAM_FENCE_3);
         4: string(STR_PARAM_FENCE_4);
      };
    }
  }
}

basecost{
 PR_BUILD_RAIL : param_cost+1;
}
# 4 "src/index.pnml" 2
# 1 "src/import/templates.pnml" 1


    template tmpl_gui (x, x1, y, y1, z) {
        [ x, y, 8, 18, 7, 0]
        [ x1, y1, 20, 16, 1, 2]
        [ x+48, y, 20, 12, 1, 6]
        [ x+80, y, 20, 16, 1, 2]
        [ x+112, y, 20, 16, 1, 2]
        [ x+144, 0, 20, 20, 0, 0]
        [ x+176, z, 20, 20, 0, 0]
        [ x+208, 0, 20, 18, 0, 0]
        [ x+240, y, 20, 29, 0, 0]
        [ x+272, y, 26, 28, 0, 0]
        [ x+304, y, 27, 28, 0, 0]
        [ x+336, y, 26, 31, 0, 0]
        [ x+368, y, 26, 31, 0, 0]
        [ x+400, 0, 32, 32, 0, 0]
        [ x+445, z, 27, 32, 0, 0]
        [ x+480, 0, 29, 29, 0, 0]
    }

    template tmpl_overlay (x, y) {
        [ x, y, 64, 31, -31, 0]
        [ x+70, y, 64, 31, -31, 0]
        [ x+140, y, 64, 31, -31, 0]
        [ x+210, y, 64, 31, -31, 0]
        [ x+280, y, 64, 31, -31, 0]
        [ x+350, y, 64, 31, -31, 0]
        [ x+420, y, 64, 39, -31, -8]
        [ x+490, y, 64, 23, -31, 0]
        [ x+560, y, 64, 23, -31, 0]
        [ x+630, y, 64, 39, -31, -8]
    }

    template tmpl_underlay (x, y) {
        [ x, y, 64, 31, -31, 0]
        [ x+70, y, 64, 31, -31, 0]
        [ x+140, y, 64, 31, -31, 0]
        [ x+210, y, 64, 31, -31, 0]
        [ x+280, y, 64, 31, -31, 0]
        [ x+350, y, 64, 31, -31, 0]
        [ x+420, y, 64, 39, -31, -8]
        [ x+490, y, 64, 23, -31, 0]
        [ x+560, y, 64, 23, -31, 0]
        [ x+630, y, 64, 39, -31, -8]
        [ x+700, y, 64, 31, -31, 0]
        [ x+770, y, 64, 31, -31, 0]
        [ x+840, y, 64, 31, -31, 0]
        [ x+910, y, 64, 31, -31, 0]
        [ x+980, y, 64, 31, -31, 0]
        [ x+1050, y, 64, 31, -31, 0]
    }

    template tmpl_bridge_surface (x, y) {
        [ x, y, 64, 31, -31, 0]
        [ x+70, y, 64, 31, -31, 0]
        [ x+140, y, 64, 39, -31, -8]
        [ x+210, y, 64, 23, -31, 0]
        [ x+280, y, 64, 23, -31, 0]
        [ x+350, y, 64, 39, -31, -8]
    }

    template tmpl_tunnel_underlay (x, y) {
        [ x, y, 64, 50, -31, -10]
        [ x+70, y, 64, 50, -30, -19]
        [ x+140, y, 64, 50, -31, -19]
        [ x+210, y, 64, 50, -31, -10]
    }
    template tmpl_tunnel_overlay (x, y) {
        [ x, y, 64, 50, -31, -40]
        [ x+70, y, 64, 50, -25, -38]
        [ x+140, y, 64, 50, -37, -38]
        [ x+210, y, 64, 50, -31, -40]
    }
    template tmpl_tunnel_urban_underlay (x, y) {
        [ x, y, 64, 31, -31, 0]
        [ x+70, y, 64, 31, -31, 0]
        [ x, y, 64, 31, -31, 0]
        [ x+70, y, 64, 31, -31, 0]
    }
    template tmpl_tunnel_urban_overlay (x, y) {
        [ x, y, 64, 50, -31, -39]
        [ x+70, y, 64, 50, -32, -38]
        [ x+140, y, 64, 50, -31, -38]
        [ x+210, y, 64, 50, -31, -40]
    }

    template tmpl_new_fences (x, y) {
      [ x, y, 32, 25, -33, -11]
      [ x+40, y, 32, 25, 3, -11]
      [ x+80, y, 8, 39, -3, -24]
      [ x+100, y, 64, 12, -31, -12]
      [ x+170, y, 32, 17, -33, -10]
      [ x+210, y, 32, 17, 3, -10]
      [ x+250, y, 32, 35, -33, -20]
      [ x+290, y, 32, 35, 3, -20]
      [ x, y, 32, 25, -29, -9]
      [ x+40, y, 32, 25, -1, -9]
      [ x+330, y, 8, 39, -3, -24]
      [ x+100, y, 64, 12, -31, -12]
      [ x+170, y, 32, 17, -29, -8]
      [ x+210, y, 32, 17, -1, -8]
      [ x+250, y, 32, 35, -29, -18]
      [ x+290, y, 32, 35, -1, -18]
    }

    template tmpl_depot (x, y) {
        [ x, y, 64, 57, -31, -30]
        [ x+70, y, 64, 57, -9, -41]
        [ x+140, y, 64, 57, -31, -30]
        [ x+210, y, 64, 57, -53, -41]
        [ x+280, y, 64, 57, -53, -41]
        [ x+350, y, 64, 57, -9, -41]
    }

    template tmpl_catenary_wire(x,y) {
      [0, y, 32, 20, -29, -6]
      [48, y, 32, 20, -1, -6]
      [96, y, 32, 5, -1, -6]
      [144, y, 1, 20, 0, -7]
      [160, y, 32, 28, -29, -6]
      [208, y, 32, 13, -1, 2]
      [256, y, 32, 13, -29, 2]
      [304, y, 32, 28, -1, -6]
      [352, y, 32, 19, -29, -5]
      [400, y, 32, 19, -1, -5]
      [448, y, 32, 5, -1, -6]
      [496, y, 1, 20, 0, -7]
      [512, y, 32, 27, -29, -5]
      [560, y, 32, 12, -1, 3]
      [608, y, 32, 12, -29, 3]
      [656, y, 32, 27, -1, -5]
      [704, y, 32, 20, -29, -6]
      [0, y+50, 32, 20, -1, -6]
      [48, y+50, 32, 5, -1, -6]
      [96, y+50, 1, 20, 0, -7]
      [112, y+50, 32, 28, -29, -6]
      [160, y+50, 32, 13, -1, 2]
      [208, y+50, 32, 13, -29, 2]
      [256, y+50, 32, 28, -1, -6]
      [304, y+50, 16, 11, -29, 3]
      [336, y+50, 16, 12, -1, -6]
      [368, y+50, 16, 12, -13, -6]
      [400, y+50, 16, 11, 15, 3]
    }
  template tmpl_catenary_subway(x, y) {
    [x , y, 64, 37, -45, -5]
    [x+ 80, y, 64, 37, -17, -5]
    [x+ 240, y, 64, 32, -17, -13]
    [x+ 160, y, 64, 31, -31, -6]
    [x+ 560, y, 64, 44, -45, -6]
    [x+ 400, y, 64, 30, -17, 4]
    [x+ 320, y, 64, 30, -45, 4]
    [x+ 480, y, 64, 44, -17, -6]
    [x , y, 64, 37, -45, -5]
    [x+ 80, y, 64, 37, -17, -5]
    [x+ 240, y, 64, 32, -17, -13]
    [x+ 160, y, 64, 31, -31, -6]
    [x+ 560, y, 64, 44, -45, -6]
    [x+ 400, y, 64, 30, -17, 4]
    [x+ 320, y, 64, 30, -45, 4]
    [x+ 480, y, 64, 44, -17, -6]
    [x , y, 64, 37, -45, -5]
    [x+ 80, y, 64, 37, -17, -5]
    [x+ 240, y, 64, 32, -17, -13]
    [x+ 160, y, 64, 31, -31, -6]
    [x+ 560, y, 64, 44, -45, -6]
    [x+ 400, y, 64, 30, -17, 4]
    [x+ 320, y, 64, 30, -45, 4]
    [x+ 480, y, 64, 44, -17, -6]
    [x , y, 1, 1, 0, 0]
    [x , y, 1, 1, 0, 0]
    [x , y, 1, 1, 0, 0]
    [x , y, 1, 1, 0, 0]
}

    template tmpl_catenary_pylons(x,y) {
      [x+0, y, 15, 25, -7, -20]
      [x+16, y, 15, 25, 0, -21]
      [x+32, y, 15, 25, 0, -20]
      [x+48, y, 15, 25, -7, -21]
      [x+64, y, 15, 25, 0, -19]
      [x+80, y, 15, 25, 0, -21]
      [x+96, y, 15, 25, -1, -19]
      [x+112, y, 15, 25, -10, -19]
    }

    template tmpl_level_crossing (x, y, z) {
      [ x, z, 64, 56, -31, -25]
      [ x+70, z, 64, 56, -31, -25]
      [ x+140, y, 64, 56, -33, -22]
      [ x+210, y, 64, 56, -31, -21]
      [ x+280, y, 64, 56, -57, -39]
      [ x+350, y, 64, 56, -57, -34]
      [ x+420, y, 64, 56, -7, -35]
      [ x+490, y, 64, 56, -5, -39]
      [ x+560, y, 64, 56, -31, -52]
      [ x+630, y, 64, 56, -31, -52]
    }
# 5 "src/index.pnml" 2
# 1 "src/import/trackTable.pnml" 1
# 6 "src/index.pnml" 2
# 1 "src/import/gui.pnml" 1

  spriteset(sw_wooden_ne_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,15,0,0,0)
  }
  spriteset(sw_concrete_ne_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,15,35,0,35)
  }
  spriteset(sw_urban_ne_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,15,70,0,70)
  }

  spriteset(sw_wooden_dc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,105,210+0,0)
  }
  spriteset(sw_concrete_dc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,140,210+35,35)
  }
  spriteset(sw_urban_dc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,175,210+70,70)
  }

  spriteset(sw_wooden_ac_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,25,105,210+0,0)
  }
  spriteset(sw_concrete_ac_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,25,140,210+35,35)
  }
  spriteset(sw_urban_ac_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,25,175,210+70,70)
  }

  spriteset(sw_wooden_acdc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,50,105,210+0,0)
  }
  spriteset(sw_concrete_acdc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,50,140,210+35,35)
  }
  spriteset(sw_urban_acdc_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,50,175,210+75,70)
  }

  spriteset(sw_concrete_metro_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,75,140,210+0,0)
  }
  spriteset(sw_urban_metro_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,75,175,210+35,70)
  }

  spriteset(sw_concrete_linmo_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,100,140,210+0,0)
  }
  spriteset(sw_urban_linmo_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,100,175,210+35,70)
  }

  spriteset(sw_deco_1_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,560,0,105)
  }
  spriteset(sw_deco_2_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,595,0,105)
  }
  spriteset(sw_deco_3_gui, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/gui.png") {
    tmpl_gui (0,0,630,0,105)
  }
# 7 "src/index.pnml" 2
# 1 "src/import/catenary.pnml" 1

  spriteset(sw_catenary_wire_black, "gfx/catenary/wire_black.png") {
    tmpl_catenary_wire (0, 0)
  }
  spriteset(sw_catenary_wire_white, "gfx/catenary/wire_white.png") {
    tmpl_catenary_wire (0, 0)
  }
  spriteset(sw_fake_track_grass, "gfx/catenary/fake_grass.png") {
    tmpl_catenary_subway (0, 0)
  }
  spriteset(sw_guideway_cover, "gfx/catenary/test.png") {
    tmpl_catenary_subway (0, 0)
  }



switch(FEAT_RAILTYPES,SELF,sw_catenary_wire,param_wire){
  1:sw_catenary_wire_white;
  sw_catenary_wire_black;
}

  spriteset(sw_pylons_empty, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles_empty.png") {tmpl_catenary_pylons (0, 0)}

  spriteset(sw_pylons_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles.png") {tmpl_catenary_pylons (0, 0)}
  spriteset(sw_pylons_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles.png") {tmpl_catenary_pylons (0, 30)}
  spriteset(sw_pylons_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles.png") {tmpl_catenary_pylons (0, 60)}


  spriteset(sw_pylons_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles.png") {tmpl_catenary_pylons (0, 90)}
  spriteset(sw_pylons_5, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/catenary/poles.png") {tmpl_catenary_pylons (0, 120)}
# 8 "src/index.pnml" 2
# 1 "src/import/tunnels.pnml" 1


      spriteset(sw_tunnel_urban_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/tunnel_urban.png") {
        tmpl_tunnel_urban_overlay (280, 0)
      }





      spriteset(sw_narrow_tunnel_arch_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1067/tunnel_1067_arch.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_narrow_tunnel_arch_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1067/tunnel_1067_arch.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_narrow_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1067/tunnel_1067_square.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_narrow_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1067/tunnel_1067_square.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_narrow_1_tunnel_urban_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_urban.png") {
        tmpl_tunnel_urban_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_tunnel_urban, [ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8) ]) { 0: sw_narrow_1_tunnel_urban_underlay; 1: sw_tunnel_urban_overlay;}


      spriteset(sw_scotch_tunnel_arch_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1372/tunnel_1372_arch.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_scotch_tunnel_arch_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1372/tunnel_1372_arch.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_scotch_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1372/tunnel_1372_square.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_scotch_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1372/tunnel_1372_square.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_scotch_1_tunnel_urban_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
        tmpl_tunnel_urban_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_scotch_tunnel_urban, [ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8) ]) { 0: sw_scotch_1_tunnel_urban_underlay; 1: sw_tunnel_urban_overlay;}



      spriteset(sw_standard_tunnel_arch_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_arch.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_standard_tunnel_arch_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_arch.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_standard_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_square.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_standard_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_square.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_standard_1_tunnel_urban_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
        tmpl_tunnel_urban_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_tunnel_urban, [ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8) ]) { 0: sw_standard_1_tunnel_urban_underlay; 1: sw_tunnel_urban_overlay;}



    spriteset(sw_metro_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_metro_square.png") {
        tmpl_tunnel_overlay (280, 0)
    }
    spriteset(sw_metro_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_metro_square.png") {
      tmpl_tunnel_underlay (0, 0)
    }

    spriteset(sw_metro_1_tunnel_urban_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_urban_metro.png") {
      tmpl_tunnel_urban_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_metro_tunnel_urban, [ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8) ]) { 0: sw_metro_1_tunnel_urban_underlay; 1: sw_tunnel_urban_overlay;}



    spriteset(sw_linear_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_linear_square.png") {
        tmpl_tunnel_overlay (280, 0)
    }
    spriteset(sw_linear_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/1435/tunnel_1435_linear_square.png") {
      tmpl_tunnel_underlay (0, 0)
    }

    spriteset(sw_linear_1_tunnel_urban_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_urban_linmo.png") {
      tmpl_tunnel_urban_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_linear_tunnel_urban, [ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8) ]) { 0: sw_linear_1_tunnel_urban_underlay; 1: sw_tunnel_urban_overlay;}



      spriteset(sw_shin_tunnel_arch_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/shinkansen/tunnel_shin_arch.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_shin_tunnel_arch_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/shinkansen/tunnel_shin_arch.png") {
        tmpl_tunnel_underlay (0, 0)
      }

      spriteset(sw_shin_tunnel_square_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/shinkansen/tunnel_shin_square.png") {
        tmpl_tunnel_overlay (280, 0)
      }
      spriteset(sw_shin_tunnel_square_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/tunnels/shinkansen/tunnel_shin_square.png") {
        tmpl_tunnel_underlay (0, 0)
      }
# 9 "src/index.pnml" 2
# 1 "src/import/depots.pnml" 1




    spriteset(sw_depot_narrow_dc_1_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 60)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_narrow_1, terrain_type) {
      TILETYPE_NORMAL: sw_depot_narrow_dc_1_gfx;
      sw_depot_narrow_dc_1_gfx;
    }
    spriteset(sw_depot_narrow_dc_2_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 180)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_narrow_2, terrain_type) {
      TILETYPE_NORMAL: sw_depot_narrow_dc_2_gfx;
      sw_depot_narrow_dc_2_gfx;
    }
    spriteset(sw_depot_narrow_dc_3_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 60)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_narrow_3, terrain_type) {
      TILETYPE_NORMAL: sw_depot_narrow_dc_3_gfx;
      sw_depot_narrow_dc_3_gfx;
    }


    spriteset(sw_depot_scotch_dc_1_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 120)
    }
    spriteset(sw_depot_scotch_dc_2_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 0)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_scotch_1, terrain_type) {
      TILETYPE_NORMAL: sw_depot_scotch_dc_1_gfx;
      sw_depot_scotch_dc_1_gfx;
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_scotch_2, terrain_type) {
      TILETYPE_NORMAL: sw_depot_scotch_dc_2_gfx;
      sw_depot_scotch_dc_2_gfx;
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_scotch_3, terrain_type) {
      TILETYPE_NORMAL: sw_depot_scotch_dc_2_gfx;
      sw_depot_scotch_dc_2_gfx;
    }


    spriteset(sw_depot_standard_dc_1_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 120)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_standard_1, terrain_type) {
      TILETYPE_NORMAL: sw_depot_standard_dc_1_gfx;
      sw_depot_standard_dc_1_gfx;
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_standard_2, terrain_type) {
      TILETYPE_NORMAL: sw_depot_standard_dc_1_gfx;
      sw_depot_standard_dc_1_gfx;
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_standard_3, terrain_type) {
      TILETYPE_NORMAL: sw_depot_standard_dc_1_gfx;
      sw_depot_standard_dc_1_gfx;
    }

    spriteset(sw_depot_shin_1_gfx, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/depots.png") {
      tmpl_depot (0, 0)
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_shin_1, terrain_type) {
      TILETYPE_NORMAL: sw_depot_shin_1_gfx;
      sw_depot_shin_1_gfx;
    }
    switch(FEAT_RAILTYPES, SELF, sw_depot_shin_2, terrain_type) {
      TILETYPE_NORMAL: sw_depot_shin_1_gfx;
      sw_depot_shin_1_gfx;
    }
# 10 "src/index.pnml" 2
# 1 "src/import/fences.pnml" 1



    spriteset (gfx_fence_0, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/Fences.png") {
      tmpl_new_fences(0,0)
    }

    spriteset (gfx_fence_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/Fences.png") {
      tmpl_new_fences(0,50)
    }

    spriteset (gfx_fence_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/Fences.png") {
      tmpl_new_fences(0,100)
    }

    spriteset (gfx_fence_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/Fences.png") {
      tmpl_new_fences(0,150)
    }

    spriteset (gfx_fence_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/Fences.png") {
      tmpl_new_fences(0,200)
    }


    switch(FEAT_RAILTYPES,SELF,sw_param_fence_narrow_1,param_fences_1){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
    switch(FEAT_RAILTYPES,SELF,sw_param_fence_narrow_2,param_fences_2){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
    switch(FEAT_RAILTYPES,SELF,sw_param_fence_narrow_3,param_fences_3){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
    switch(FEAT_RAILTYPES,SELF,sw_param_fence_standard_1,param_fences_4){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
    switch(FEAT_RAILTYPES,SELF,sw_param_fence_standard_2,param_fences_5){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
    switch(FEAT_RAILTYPES,SELF,sw_param_fence_standard_3,param_fences_6){
      1:gfx_fence_1;
      2:gfx_fence_2;
      3:gfx_fence_3;
      4:gfx_fence_4;
      gfx_fence_0;
    }
# 11 "src/index.pnml" 2
# 1 "src/import/crossings.pnml" 1



      spriteset(sw_narrow_crossing_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 0, 0)
      }

      spriteset(sw_narrow_crossing_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 60, 120)
      }
      spriteset(sw_narrow_crossing_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 120, 120)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_2, level_crossing_status) {
          LEVEL_CROSSING_CLOSED: sw_narrow_crossing_2_closed;
          LEVEL_CROSSING_OPEN: sw_narrow_crossing_2_opened;
          sw_narrow_crossing_2_opened;
      }

        spriteset(sw_narrow_crossing_3_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
          tmpl_level_crossing (0, 180, 60)
        }
        spriteset(sw_narrow_crossing_3_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
          tmpl_level_crossing (0, 240, 60)
        }
        switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_3, level_crossing_status) {
            LEVEL_CROSSING_CLOSED: sw_narrow_crossing_3_closed;
            LEVEL_CROSSING_OPEN: sw_narrow_crossing_3_opened;
            sw_narrow_crossing_3_opened;
        }

      spriteset(sw_narrow_crossing_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 300, 0)
      }

      spriteset(sw_narrow_crossing_5_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 360, 120)
      }
      spriteset(sw_narrow_crossing_5_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 420, 120)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_5, level_crossing_status) {
          LEVEL_CROSSING_CLOSED: sw_narrow_crossing_5_closed;
          sw_narrow_crossing_5_opened;
      }

      spriteset(sw_narrow_crossing_6_1_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 480, 120)
      }
      spriteset(sw_narrow_crossing_6_1_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 540, 120)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_6_1, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_narrow_crossing_6_1_closed;
        sw_narrow_crossing_6_1_opened;
      }
      spriteset(sw_narrow_crossing_6_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 480, 180)
      }
      spriteset(sw_narrow_crossing_6_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 540, 180)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_6_2, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_narrow_crossing_6_2_closed;
        sw_narrow_crossing_6_2_opened;
      }

      spriteset(sw_narrow_crossing_7_1_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 600, 120)
      }
      spriteset(sw_narrow_crossing_7_1_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 660, 120)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_7_1, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_narrow_crossing_7_1_closed;
        sw_narrow_crossing_7_1_opened;
      }
      spriteset(sw_narrow_crossing_7_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 600, 180)
      }
      spriteset(sw_narrow_crossing_7_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 660, 180)
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_7_2, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_narrow_crossing_7_2_closed;
        sw_narrow_crossing_7_2_opened;
      }

      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_wood_1, current_year) {
        0..1959:sw_narrow_crossing_1;
        sw_narrow_crossing_4;
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_wood_2, current_year) {
        0..1959:sw_narrow_crossing_2;
        sw_narrow_crossing_5;
      }
      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_wood, town_zone) {

        TOWNZONE_OUTSKIRT:sw_narrow_crossing_wood_2;
        TOWNZONE_OUTER_SUBURB:sw_narrow_crossing_wood_2;
        TOWNZONE_INNER_SUBURB:sw_narrow_crossing_wood_2;
        TOWNZONE_CENTRE:sw_narrow_crossing_wood_2;
        sw_narrow_crossing_wood_1;
      }

      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_conc, current_year) {
        0..1959:sw_narrow_crossing_3;
        1960..1989:sw_narrow_crossing_6_1;
        sw_narrow_crossing_6_2;
      }

      switch(FEAT_RAILTYPES, SELF, sw_narrow_crossing_urban, current_year) {
        0..1989:sw_narrow_crossing_7_1;
        sw_narrow_crossing_7_2;
      }


      spriteset(sw_standard_crossing_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 0, 240)
      }

      spriteset(sw_standard_crossing_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 60, 360)
      }
      spriteset(sw_standard_crossing_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 120, 360)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_2, level_crossing_status) {
          LEVEL_CROSSING_CLOSED: sw_standard_crossing_2_closed;
          LEVEL_CROSSING_OPEN: sw_standard_crossing_2_opened;
          sw_standard_crossing_2_opened;
      }

        spriteset(sw_standard_crossing_3_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
          tmpl_level_crossing (0, 180, 300)
        }
        spriteset(sw_standard_crossing_3_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
          tmpl_level_crossing (0, 240, 300)
        }
        switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_3, level_crossing_status) {
            LEVEL_CROSSING_CLOSED: sw_standard_crossing_3_closed;
            LEVEL_CROSSING_OPEN: sw_standard_crossing_3_opened;
            sw_standard_crossing_3_opened;
        }

      spriteset(sw_standard_crossing_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 300, 240)
      }

      spriteset(sw_standard_crossing_5_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 360, 360)
      }
      spriteset(sw_standard_crossing_5_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 420, 360)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_5, level_crossing_status) {
          LEVEL_CROSSING_CLOSED: sw_standard_crossing_5_closed;
          sw_standard_crossing_5_opened;
      }

      spriteset(sw_standard_crossing_6_1_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 480, 360)
      }
      spriteset(sw_standard_crossing_6_1_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 540, 360)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_6_1, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_standard_crossing_6_1_closed;
        sw_standard_crossing_6_1_opened;
      }
      spriteset(sw_standard_crossing_6_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 480, 180)
      }
      spriteset(sw_standard_crossing_6_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 540, 180)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_6_2, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_standard_crossing_6_2_closed;
        sw_standard_crossing_6_2_opened;
      }

      spriteset(sw_standard_crossing_7_1_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 600, 360)
      }
      spriteset(sw_standard_crossing_7_1_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 660, 360)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_7_1, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_standard_crossing_7_1_closed;
        sw_standard_crossing_7_1_opened;
      }
      spriteset(sw_standard_crossing_7_2_closed, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 600, 180)
      }
      spriteset(sw_standard_crossing_7_2_opened, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/obj/railCrossings.png") {
        tmpl_level_crossing (0, 660, 180)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_7_2, level_crossing_status) {
        LEVEL_CROSSING_CLOSED: sw_standard_crossing_7_2_closed;
        sw_standard_crossing_7_2_opened;
      }

      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_wood_1, current_year) {
        0..1959:sw_standard_crossing_1;
        sw_standard_crossing_4;
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_wood_2, current_year) {
        0..1959:sw_standard_crossing_2;
        sw_standard_crossing_5;
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_wood, town_zone) {

        TOWNZONE_OUTSKIRT:sw_standard_crossing_wood_2;
        TOWNZONE_OUTER_SUBURB:sw_standard_crossing_wood_2;
        TOWNZONE_INNER_SUBURB:sw_standard_crossing_wood_2;
        TOWNZONE_CENTRE:sw_standard_crossing_wood_2;
        sw_standard_crossing_wood_1;
      }

      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_conc, current_year) {
        0..1959:sw_standard_crossing_3;
        1960..1989:sw_standard_crossing_6_1;
        sw_standard_crossing_6_2;
      }

      switch(FEAT_RAILTYPES, SELF, sw_standard_crossing_urban, current_year) {
        0..1989:sw_standard_crossing_7_1;
        sw_standard_crossing_7_2;
      }
# 12 "src/index.pnml" 2

# 1 "src/rails/narrow/gfx_narrow.pnml" 1


    spriteset(sw_narrow_1_overlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood_snow_overlay.png") {
      tmpl_overlay (0, 0)
    }
    spriteset(sw_narrow_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood_snow.png") {
      tmpl_underlay (0, 40)
    }

    spriteset(sw_narrow_1_overlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood.png") {
      tmpl_overlay (0, 0)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_1_overlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_1_overlay_snow;
      sw_narrow_1_overlay_def;
    }

    spriteset(sw_narrow_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood.png") {
      tmpl_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_1_underlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_1_underlay_snow;
      sw_narrow_1_underlay_def;
    }

    spriteset(sw_narrow_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_narrow_1_1_overlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood_dv.png") {
      tmpl_overlay (0, 0)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_1_1_overlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_1_overlay_snow;
      sw_narrow_1_1_overlay_def;
    }

    spriteset(sw_narrow_1_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood_dv.png") {
      tmpl_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_1_1_underlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_1_underlay_snow;
      sw_narrow_1_1_underlay_def;
    }

    spriteset(sw_narrow_1_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_wood_dv.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_narrow_2_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc_snow.png") {
      tmpl_underlay (0, 40)
    }

    spriteset(sw_narrow_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc.png") {
      tmpl_overlay (0, 0)
    }

    spriteset(sw_narrow_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc.png") {
      tmpl_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_2_underlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_2_underlay_snow;
      sw_narrow_2_underlay_def;
    }

    spriteset(sw_narrow_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_narrow_2_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc_dv.png") {
      tmpl_overlay (0, 0)
    }

    spriteset(sw_narrow_2_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc_dv.png") {
      tmpl_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_2_1_underlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_2_underlay_snow;
      sw_narrow_2_1_underlay_def;
    }

    spriteset(sw_narrow_2_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_conc_dv.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_narrow_3_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_urban_snow.png") {
      tmpl_underlay (0, 40)
    }

    spriteset(sw_narrow_3_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_urban.png") {
      tmpl_overlay (0, 0)
    }

    spriteset(sw_narrow_3_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_urban.png") {
      tmpl_underlay (0, 40)
    }
    switch(FEAT_RAILTYPES, SELF, sw_narrow_3_underlay, terrain_type) {
      TILETYPE_SNOW: sw_narrow_3_underlay_snow;
      sw_narrow_3_underlay_def;
    }

    spriteset(sw_narrow_3_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/narrow/1067_urban.png") {
      tmpl_bridge_surface (0, 80)
    }
# 14 "src/index.pnml" 2

# 1 "src/rails/narrow/narrow_ne_1.pnml" 1
if (param_tracks_1>0&&param_tracks_1!=2){
  item(FEAT_RAILTYPES, track_narrow_ne_1, 01) {
    property {
        label: "NAAN";
        introduction_date: date(0001, 1, 1);
        name: string(STR_TRACK,string(STR_NARROW));
        menu_text: string(STR_TRACK,string(STR_NARROW));
        toolbar_caption: string(STR_TRACK,string(STR_NARROW));
        build_window_caption: string(STR_PURCHASE, string(STR_NARROW));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_REPLACE, string(STR_NARROW));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 6;
        maintenance_cost: 7;
        sort_order: 01;
        map_colour: 108;


        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNN1","JNN2","JNN3","NAAN","NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_ne_gui;
        track_overlay: sw_narrow_1_overlay;
        underlay: sw_narrow_1_underlay;
        tunnels: sw_narrow_tunnel_arch_underlay;
        tunnel_overlay: sw_narrow_tunnel_arch_overlay;
        depots: sw_depot_narrow_1;
        bridge_surfaces: sw_narrow_1_bridge;
        level_crossings: sw_narrow_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_1;
    }
}}
# 16 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_ne_2.pnml" 1
if (param_tracks_1>0&&param_tracks_1!=2){
item(FEAT_RAILTYPES, track_narrow_ne_2, 02) {
    property {
        label: "JNN2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_TRACK,string(STR_NARROW));
        menu_text: string(STR_TRACK,string(STR_NARROW));
        toolbar_caption: string(STR_TRACK,string(STR_NARROW));
        build_window_caption: string(STR_PURCHASE, string(STR_NARROW));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_REPLACE, string(STR_NARROW));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 7;
        maintenance_cost: 6;
        sort_order: 02;
        map_colour: 108;

        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNN1","JNN2","JNN3","NAAN","NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_ne_gui;
        track_overlay: sw_narrow_2_overlay;
        underlay: sw_narrow_2_underlay;
        tunnels: sw_narrow_tunnel_square_underlay;
        tunnel_overlay: sw_narrow_tunnel_square_overlay;
        depots: sw_depot_narrow_2;
        bridge_surfaces: sw_narrow_2_bridge;
        level_crossings: sw_narrow_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_2;
    }
}}
# 17 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_ne_3.pnml" 1
if (param_tracks_1>0&&param_tracks_1!=2){
item(FEAT_RAILTYPES, track_narrow_ne_3, 03) {
    property {
        label: "JNN3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_TRACK,string(STR_URBAN,string(STR_NARROW)));
        menu_text: string(STR_TRACK,string(STR_URBAN,string(STR_NARROW)));
        toolbar_caption: string(STR_TRACK,string(STR_URBAN,string(STR_NARROW)));
        build_window_caption: string(STR_PURCHASE, string(STR_NARROW));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_REPLACE, string(STR_NARROW));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 8;
        maintenance_cost: 6;
        sort_order: 03;
        map_colour: 108;

        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNN1","JNN2","JNN3","NAAN","NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_ne_gui;
        track_overlay: sw_narrow_3_overlay;
        underlay: sw_narrow_3_underlay;
        tunnels: sw_narrow_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_narrow_3;
        bridge_surfaces: sw_narrow_3_bridge;
        level_crossings: sw_narrow_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_3;
    }
}}
# 18 "src/index.pnml" 2

# 1 "src/rails/narrow/narrow_dc_1.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_dc_1, 04) {
    property {
        label: "JND1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 8;
        maintenance_cost: 11;
        sort_order: 04;
        map_colour: 148;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JND1","JND2","JND3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_dc_gui;
        track_overlay: sw_narrow_1_overlay;
        underlay: sw_narrow_1_underlay;
        tunnels: sw_narrow_tunnel_arch_underlay;
        tunnel_overlay: sw_narrow_tunnel_arch_overlay;
        depots: sw_depot_narrow_1;
        bridge_surfaces: sw_narrow_1_bridge;
        level_crossings: sw_narrow_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_1;
    }
}}
# 20 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_dc_2.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_dc_2, 05) {
    property {
        label: "JND2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_NARROW)));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 9;
        maintenance_cost: 10;
        sort_order: 05;
        map_colour: 148;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JND1","JND2","JND3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_dc_gui;
        track_overlay: sw_narrow_2_overlay;
        underlay: sw_narrow_2_underlay;
        tunnels: sw_narrow_tunnel_square_underlay;
        tunnel_overlay: sw_narrow_tunnel_square_overlay;
        depots: sw_depot_narrow_2;
        bridge_surfaces: sw_narrow_2_bridge;
        level_crossings: sw_narrow_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_2;
    }
}}
# 21 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_dc_3.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_dc_3, 06) {
    property {
        label: "JND3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        menu_text: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        toolbar_caption: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 10;
        maintenance_cost: 10;
        sort_order: 06;
        map_colour: 148;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JND1","JND2","JND3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_dc_gui;
        track_overlay: sw_narrow_3_overlay;
        underlay: sw_narrow_3_underlay;
        tunnels: sw_narrow_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_narrow_3;
        bridge_surfaces: sw_narrow_3_bridge;
        level_crossings: sw_narrow_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_narrow_3;
    }
}}
# 22 "src/index.pnml" 2

# 1 "src/rails/narrow/narrow_ac_1.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_ac_1, 07) {
    property {
        label: "JNA1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE,string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 11;
        maintenance_cost: 10;
        sort_order: 07;
        map_colour: 43;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_ac_gui;
        track_overlay: sw_narrow_1_overlay;
        underlay: sw_narrow_1_underlay;
        tunnels: sw_narrow_tunnel_arch_underlay;
        tunnel_overlay: sw_narrow_tunnel_arch_overlay;
        depots: sw_depot_narrow_1;
        bridge_surfaces: sw_narrow_1_bridge;
        level_crossings: sw_narrow_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_narrow_1;
    }
}}
# 24 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_ac_2.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_ac_2, 08) {
    property {
        label: "JNA2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_NARROW)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 12;
        maintenance_cost: 9;
        sort_order: 08;
        map_colour: 43;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_ac_gui;
        track_overlay: sw_narrow_2_overlay;
        underlay: sw_narrow_2_underlay;
        tunnels: sw_narrow_tunnel_square_underlay;
        tunnel_overlay: sw_narrow_tunnel_square_overlay;
        depots: sw_depot_narrow_2;
        bridge_surfaces: sw_narrow_2_bridge;
        level_crossings: sw_narrow_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_narrow_2;
    }
}}
# 25 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_ac_3.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_ac_3, 09) {
    property {
        label: "JNA3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        menu_text: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        toolbar_caption: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_NARROW))));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 13;
        maintenance_cost: 9;
        sort_order: 09;
        map_colour: 43;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_ac_gui;
        track_overlay: sw_narrow_3_overlay;
        underlay: sw_narrow_3_underlay;
        tunnels: sw_narrow_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_narrow_3;
        bridge_surfaces: sw_narrow_3_bridge;
        level_crossings: sw_narrow_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_narrow_3;
    }
}}
# 26 "src/index.pnml" 2

# 1 "src/rails/narrow/narrow_acdc_1.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_acdc_1, 10) {
    property {
        label: "NABE";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        build_window_caption: string(STR_DUAL,string(STR_PURCHASE, string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_DUAL,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 23;
        maintenance_cost: 17;
        sort_order: 10;
        map_colour: 57;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_acdc_gui;
        track_overlay: sw_narrow_1_1_overlay;
        underlay: sw_narrow_1_1_underlay;
        tunnels: sw_narrow_tunnel_arch_underlay;
        tunnel_overlay: sw_narrow_tunnel_arch_overlay;
        depots: sw_depot_narrow_1;
        bridge_surfaces: sw_narrow_1_1_bridge;
        level_crossings: sw_narrow_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_3;
        fences: sw_param_fence_narrow_1;
    }
}}
# 28 "src/index.pnml" 2
# 1 "src/rails/narrow/narrow_acdc_2.pnml" 1
if (param_tracks_1>1){
item(FEAT_RAILTYPES, track_narrow_acdc_2, 11) {
    property {
        label: "JNV2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        menu_text: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        toolbar_caption: string(STR_DUAL,string(STR_TRACK,string(STR_NARROW)));
        new_engine_text: string(STR_NARROW);
        autoreplace_text: string(STR_DUAL,string(STR_REPLACE, string(STR_NARROW)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 24;
        maintenance_cost: 16;
        sort_order: 11;
        map_colour: 57;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JNN1","JNN2","JNN3","NAAN","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG1","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_acdc_gui;
        track_overlay: sw_narrow_2_1_overlay;
        underlay: sw_narrow_2_1_underlay;
        tunnels: sw_narrow_tunnel_square_underlay;
        tunnel_overlay: sw_narrow_tunnel_square_overlay;
        depots: sw_depot_narrow_2;
        bridge_surfaces: sw_narrow_2_1_bridge;
        level_crossings: sw_narrow_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_3;
        fences: sw_param_fence_narrow_2;
    }
}}
# 29 "src/index.pnml" 2


# 1 "src/rails/standard/gfx_standard.pnml" 1


    spriteset(sw_standard_1_overlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_snow_overlay.png") {
      tmpl_overlay (0, 0)
    }
    spriteset(sw_standard_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_standard_1_overlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_wood.png") {
          tmpl_overlay (0, 0)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_1_overlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_1_overlay_snow;
        sw_standard_1_overlay_def;
      }

      spriteset(sw_standard_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_wood.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_1_underlay_snow;
        sw_standard_1_underlay_def;
      }

    spriteset(sw_standard_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_wood.png") {
      tmpl_bridge_surface (0, 80)
    }


        spriteset(sw_standard_1_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
            tmpl_overlay (0, 0)
        }

        spriteset(sw_standard_1_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
            tmpl_underlay (0, 40)
        }
        switch(FEAT_RAILTYPES, SELF, sw_standard_1_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_1_underlay_snow;
        sw_standard_1_1_underlay_def;
      }

      spriteset(sw_standard_1_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
        tmpl_bridge_surface (0, 80)
      }


    spriteset(sw_standard_2_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_standard_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_conc.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_standard_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_conc.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_2_underlay_snow;
        sw_standard_2_underlay_def;
      }

    spriteset(sw_standard_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1435_conc.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_standard_2_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_standard_2_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_2_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_2_underlay_snow;
        sw_standard_2_1_underlay_def;
      }

    spriteset(sw_standard_2_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_standard_3_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_standard_3_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_standard_3_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_standard_3_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_3_underlay_snow;
        sw_standard_3_underlay_def;
      }

    spriteset(sw_standard_3_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_metro_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_metro_wood.png") {
          tmpl_overlay (0, 0)
      }
    spriteset(sw_metro_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_metro_wood_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_metro_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_metro_wood.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_metro_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_metro_1_underlay_snow;
        sw_metro_1_underlay_def;
      }

    spriteset(sw_metro_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_metro_wood.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_metro_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_urban_metro.png") {
          tmpl_overlay (0, 0)
      }
    spriteset(sw_metro_2_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_urban_metro_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_metro_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_urban_metro.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_metro_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_metro_2_underlay_snow;
        sw_metro_2_underlay_def;
      }

    spriteset(sw_metro_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/metro/1435_urban_metro.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_linear_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_conc_linmo.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_linear_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_conc_linmo.png") {
          tmpl_underlay (0, 40)
      }
      spriteset(sw_linear_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_conc_linmo_snow.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_linear_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_linear_1_underlay_snow;
        sw_linear_1_underlay_def;
      }

    spriteset(sw_linear_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_conc_linmo.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_linear_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_urban_linmo.png") {
          tmpl_overlay (0, 0)
      }
    spriteset(sw_linear_2_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_urban_linmo_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_linear_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_urban_linmo.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_linear_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_linear_2_underlay_snow;
        sw_linear_2_underlay_def;
      }

    spriteset(sw_linear_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/linear/1435_urban_linmo.png") {
      tmpl_bridge_surface (0, 80)
    }
# 32 "src/index.pnml" 2

# 1 "src/rails/standard/standard_ne_1.pnml" 1

item(FEAT_RAILTYPES, track_standard_ne_1, 17) {
    property {
        label: "RAIL";
        introduction_date: date(0001, 1, 1);
        name: string(STR_TRACK,string(STR_STANDARD));
        menu_text: string(STR_TRACK,string(STR_STANDARD));
        toolbar_caption: string(STR_TRACK,string(STR_STANDARD));
        build_window_caption: string(STR_PURCHASE, string(STR_STANDARD));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_REPLACE, string(STR_STANDARD));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 8;
        maintenance_cost: 9;
        sort_order: 17;
        map_colour: 116;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSN1","JSN2","JSN3","RAIL","ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_ne_gui;
        track_overlay: sw_standard_1_overlay;
        underlay: sw_standard_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_standard_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_1;
    }
}
# 34 "src/index.pnml" 2
# 1 "src/rails/standard/standard_ne_2.pnml" 1
if (param_tracks_3>1&&param_tracks_3!=2){
item(FEAT_RAILTYPES, track_standard_ne_2, 18) {
    property {
        label: "JSN2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_TRACK,string(STR_STANDARD));
        menu_text: string(STR_TRACK,string(STR_STANDARD));
        toolbar_caption: string(STR_TRACK,string(STR_STANDARD));
        build_window_caption: string(STR_PURCHASE, string(STR_STANDARD));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_REPLACE, string(STR_STANDARD));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 9;
        maintenance_cost: 8;
        sort_order: 18;
        map_colour: 116;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSN1","JSN2","JSN3","RAIL","ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_ne_gui;
        track_overlay: sw_standard_2_overlay;
        underlay: sw_standard_2_underlay;
        tunnels: sw_standard_tunnel_square_underlay;
        tunnel_overlay: sw_standard_tunnel_square_overlay;
        depots: sw_depot_standard_2;
        bridge_surfaces: sw_standard_2_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_2;
    }
}}
# 35 "src/index.pnml" 2
# 1 "src/rails/standard/standard_ne_3.pnml" 1
if (param_tracks_3>1&&param_tracks_3!=2){
item(FEAT_RAILTYPES, track_standard_ne_3, 19) {
    property {
        label: "JSN3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_PURCHASE, string(STR_STANDARD));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_REPLACE, string(STR_STANDARD));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 10;
        maintenance_cost: 8;
        sort_order: 19;
        map_colour: 116;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSN1","JSN2","JSN3","RAIL","ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_ne_gui;
        track_overlay: sw_standard_3_overlay;
        underlay: sw_standard_3_underlay;
        tunnels: sw_standard_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_standard_3;
        bridge_surfaces: sw_standard_3_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_3;
    }
}}
# 36 "src/index.pnml" 2

# 1 "src/rails/standard/standard_dc_1.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_dc_1, 20) {
    property {
        label: "JSD1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 10;
        maintenance_cost: 13;
        sort_order: 20;
        map_colour: 158;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_dc_gui;
        track_overlay: sw_standard_1_overlay;
        underlay: sw_standard_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_standard_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_5;
        fences: sw_param_fence_standard_1;
    }
}}
# 38 "src/index.pnml" 2
# 1 "src/rails/standard/standard_dc_2.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_dc_2, 21) {
    property {
        label: "JSD2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 11;
        maintenance_cost: 12;
        sort_order: 21;
        map_colour: 158;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_dc_gui;
        track_overlay: sw_standard_2_overlay;
        underlay: sw_standard_2_underlay;
        tunnels: sw_standard_tunnel_square_underlay;
        tunnel_overlay: sw_standard_tunnel_square_overlay;
        depots: sw_depot_standard_2;
        bridge_surfaces: sw_standard_2_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_5;
        fences: sw_param_fence_standard_2;
    }
}}
# 39 "src/index.pnml" 2
# 1 "src/rails/standard/standard_dc_3.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_dc_3, 22) {
    property {
        label: "JSD3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        menu_text: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        toolbar_caption: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 12;
        maintenance_cost: 12;
        sort_order: 22;
        map_colour: 158;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_dc_gui;
        track_overlay: sw_standard_3_overlay;
        underlay: sw_standard_3_underlay;
        tunnels: sw_standard_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_standard_3;
        bridge_surfaces: sw_standard_3_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_5;
        fences: sw_param_fence_standard_3;
    }
}}
# 40 "src/index.pnml" 2

# 1 "src/rails/standard/standard_ac_1.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_ac_1, 23) {
    property {
        label: "JSA1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 13;
        maintenance_cost: 12;
        sort_order: 23;
        map_colour: 46;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_ac_gui;
        track_overlay: sw_standard_1_overlay;
        underlay: sw_standard_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_standard_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_standard_1;
    }
}}
# 42 "src/index.pnml" 2
# 1 "src/rails/standard/standard_ac_2.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_ac_2, 24) {
    property {
        label: "JSA2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 14;
        maintenance_cost: 11;
        sort_order: 24;
        map_colour: 46;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_ac_gui;
        track_overlay: sw_standard_2_overlay;
        underlay: sw_standard_2_underlay;
        tunnels: sw_standard_tunnel_square_underlay;
        tunnel_overlay: sw_standard_tunnel_square_overlay;
        depots: sw_depot_standard_2;
        bridge_surfaces: sw_standard_2_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_standard_2;
    }
}}
# 43 "src/index.pnml" 2
# 1 "src/rails/standard/standard_ac_3.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_ac_3, 25) {
    property {
        label: "JSA3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        menu_text: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        toolbar_caption: string(STR_AC,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 15;
        maintenance_cost: 11;
        sort_order: 25;
        map_colour: 46;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_urban_ac_gui;
        track_overlay: sw_standard_3_overlay;
        underlay: sw_standard_3_underlay;
        tunnels: sw_standard_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_standard_3;
        bridge_surfaces: sw_standard_3_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_standard_3;
    }
}}
# 44 "src/index.pnml" 2

# 1 "src/rails/standard/standard_acdc_1.pnml" 1

item(FEAT_RAILTYPES, track_standard_acdc_1, 26) {
    property {
        label: "ELRL";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_DUAL,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_DUAL,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 25;
        maintenance_cost: 19;
        sort_order: 26;
        map_colour: 36;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_acdc_gui;
        track_overlay: sw_standard_1_1_overlay;
        underlay: sw_standard_1_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_standard_1_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_1;
    }
}
# 46 "src/index.pnml" 2
# 1 "src/rails/standard/standard_acdc_2.pnml" 1
if (param_tracks_3>1){
item(FEAT_RAILTYPES, track_standard_acdc_2, 27) {
    property {
        label: "JSV2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_DUAL,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_DUAL,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_DUAL,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 26;
        maintenance_cost: 18;
        sort_order: 27;
        map_colour: 36;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_acdc_gui;
        track_overlay: sw_standard_2_1_overlay;
        underlay: sw_standard_2_1_underlay;
        tunnels: sw_standard_tunnel_square_underlay;
        tunnel_overlay: sw_standard_tunnel_square_overlay;
        depots: sw_depot_standard_2;
        bridge_surfaces: sw_standard_2_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_2;
    }
}}
# 47 "src/index.pnml" 2

# 1 "src/rails/standard/standard_metro_1.pnml" 1
if (param_tracks_4==1){
item(FEAT_RAILTYPES, track_standard_metro_1, 28) {
    property {
        label: "JST1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_METRO,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_METRO,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_METRO,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_METRO,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_METRO,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 100 km/h;
        construction_cost: 10;
        maintenance_cost: 12;
        sort_order: 28;
        map_colour: 209;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JST1","JST2","JUN1"];
    }

    graphics {
        gui: sw_concrete_metro_gui;
        track_overlay: sw_metro_1_overlay;
        underlay: sw_metro_1_underlay;
        tunnels: sw_metro_tunnel_square_underlay;
        tunnel_overlay: sw_metro_tunnel_square_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_metro_1_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_5;
        fences: sw_param_fence_standard_2;
    }
}}
# 49 "src/index.pnml" 2
# 1 "src/rails/standard/standard_metro_2.pnml" 1
if (param_tracks_4==1){
item(FEAT_RAILTYPES, track_standard_metro_2, 29) {
    property {
        label: "JST2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_METRO,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        menu_text: string(STR_METRO,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        toolbar_caption: string(STR_METRO,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        build_window_caption: string(STR_METRO,string(STR_URBAN,string(STR_PURCHASE, string(STR_STANDARD))));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_METRO,string(STR_URBAN,string(STR_REPLACE, string(STR_STANDARD))));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 100 km/h;
        construction_cost: 11;
        maintenance_cost: 11;
        sort_order: 29;
        map_colour: 209;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JST1","JST2","JUN1"];
    }

    graphics {
        gui: sw_urban_metro_gui;
        track_overlay: sw_metro_2_overlay;
        underlay: sw_metro_2_underlay;
        tunnels: sw_metro_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_standard_3;
        bridge_surfaces: sw_metro_2_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_5;
        fences: sw_param_fence_standard_2;
    }
}}
# 50 "src/index.pnml" 2

# 1 "src/rails/standard/standard_linear_1.pnml" 1
if (param_tracks_5==1){
item(FEAT_RAILTYPES, track_linear_1, 30) {
    property {
        label: "JSL1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_LNR,string(STR_TRACK,string(STR_STANDARD)));
        menu_text: string(STR_LNR,string(STR_TRACK,string(STR_STANDARD)));
        toolbar_caption: string(STR_LNR,string(STR_TRACK,string(STR_STANDARD)));
        build_window_caption: string(STR_LNR,string(STR_PURCHASE, string(STR_STANDARD)));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_LNR,string(STR_REPLACE, string(STR_STANDARD)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 12;
        maintenance_cost: 11;
        sort_order: 30;
        map_colour: 186;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSL1","JSL2","JUN1"];
    }

    graphics {
        gui: sw_concrete_linmo_gui;
        track_overlay: sw_linear_1_overlay;
        underlay: sw_linear_1_underlay;
        tunnels: sw_linear_tunnel_square_underlay;
        tunnel_overlay: sw_linear_tunnel_square_overlay;
        depots: sw_depot_standard_2;
        bridge_surfaces: sw_linear_1_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_4;
        fences: sw_param_fence_standard_2;
    }
}}
# 52 "src/index.pnml" 2
# 1 "src/rails/standard/standard_linear_2.pnml" 1
if (param_tracks_5==1){
item(FEAT_RAILTYPES, track_linear_2, 31) {
    property {
        label: "JSL2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_LNR,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        menu_text: string(STR_LNR,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        toolbar_caption: string(STR_LNR,string(STR_URBAN,string(STR_TRACK,string(STR_STANDARD))));
        build_window_caption: string(STR_LNR,string(STR_URBAN,string(STR_PURCHASE, string(STR_STANDARD))));
        new_engine_text: string(STR_STANDARD);
        autoreplace_text: string(STR_LNR,string(STR_URBAN,string(STR_REPLACE, string(STR_STANDARD))));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 13;
        maintenance_cost: 13;
        sort_order: 31;
        map_colour: 186;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSL1","JSL2","JUN1"];
    }

    graphics {
        gui: sw_urban_linmo_gui;
        track_overlay: sw_linear_2_overlay;
        underlay: sw_linear_2_underlay;
        tunnels: sw_linear_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_standard_3;
        bridge_surfaces: sw_linear_2_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_4;
        fences: sw_param_fence_standard_2;
    }
}}
# 53 "src/index.pnml" 2

# 1 "src/rails/scotch/gfx_scotch.pnml" 1


      spriteset(sw_scotch_1_overlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
          tmpl_overlay (0, 0)
      }
      switch(FEAT_RAILTYPES, SELF, sw_scotch_1_overlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_1_overlay_snow;
        sw_scotch_1_overlay_def;
      }

      spriteset(sw_scotch_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_scotch_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_1_underlay_snow;
        sw_scotch_1_underlay_def;
      }

    spriteset(sw_scotch_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_wood_dv.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_scotch_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_scotch_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_scotch_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_2_underlay_snow;
        sw_scotch_2_underlay_def;
      }

    spriteset(sw_scotch_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_conc_dv.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_scotch_3_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_scotch_3_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_scotch_3_underlay, terrain_type) {
        TILETYPE_SNOW: sw_standard_3_underlay_snow;
        sw_scotch_3_underlay_def;
      }

    spriteset(sw_scotch_3_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/standard/1372_1435_urban.png") {
      tmpl_bridge_surface (0, 80)
    }
# 55 "src/index.pnml" 2
# 1 "src/rails/scotch/scotch_1.pnml" 1
if (param_tracks_2==1){
item(FEAT_RAILTYPES, track_scotch_dc_1, 14) {
  property {
      label: "JSC1";
      introduction_date: date(0001, 1, 1);
      name: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
      menu_text: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
      toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
      build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_SCOTCH)));
      new_engine_text: string(STR_SCOTCH);
      autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_SCOTCH)));

      station_graphics: RAILTYPE_STATION_NORMAL;
      acceleration_model: ACC_MODEL_RAIL;
      speed_limit: 130 km/h;
      construction_cost: 9;
      maintenance_cost: 12;
      sort_order: 14;
      map_colour: 172;

      railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
      compatible_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
      powered_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
  }

  graphics {
      gui: sw_concrete_dc_gui;
      track_overlay: sw_scotch_1_overlay;
      underlay: sw_scotch_1_underlay;
      tunnels: sw_scotch_tunnel_arch_underlay;
      tunnel_overlay: sw_scotch_tunnel_arch_overlay;
      depots: sw_depot_scotch_1;
      bridge_surfaces: sw_scotch_1_bridge;
      level_crossings: sw_standard_crossing_wood;
      catenary_wire: sw_catenary_wire;
      catenary_pylons: sw_pylons_1;
      fences: sw_param_fence_standard_1;
  }
}}
# 56 "src/index.pnml" 2
# 1 "src/rails/scotch/scotch_2.pnml" 1
if (param_tracks_2==1){
item(FEAT_RAILTYPES, track_scotch_dc_2, 15) {
    property {
        label: "JSC2";
        introduction_date: date(1950, 1, 1);
        name: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
        menu_text: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
        toolbar_caption: string(STR_DC,string(STR_TRACK,string(STR_SCOTCH)));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_SCOTCH)));
        new_engine_text: string(STR_SCOTCH);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_SCOTCH)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 10;
        maintenance_cost: 11;
        sort_order: 15;
        map_colour: 172;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_dc_gui;
        track_overlay: sw_scotch_2_overlay;
        underlay: sw_scotch_2_underlay;
        tunnels: sw_scotch_tunnel_square_underlay;
        tunnel_overlay: sw_scotch_tunnel_square_overlay;
        depots: sw_depot_scotch_2;
        bridge_surfaces: sw_scotch_2_bridge;
        level_crossings: sw_standard_crossing_conc;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_2;
    }
}}
# 57 "src/index.pnml" 2
# 1 "src/rails/scotch/scotch_3.pnml" 1
if (param_tracks_2==1){
item(FEAT_RAILTYPES, track_scotch_dc_3, 16) {
    property {
        label: "JSC3";
        introduction_date: date(1950, 1, 1);
        name: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_SCOTCH))));
        menu_text: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_SCOTCH))));
        toolbar_caption: string(STR_DC,string(STR_URBAN,string(STR_TRACK,string(STR_SCOTCH))));
        build_window_caption: string(STR_DC,string(STR_PURCHASE, string(STR_SCOTCH)));
        new_engine_text: string(STR_SCOTCH);
        autoreplace_text: string(STR_DC,string(STR_REPLACE, string(STR_SCOTCH)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 160 km/h;
        construction_cost: 11;
        maintenance_cost: 11;
        sort_order: 15;
        map_colour: 172;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
        powered_railtype_list: ["JSC1","JSC2","JSC3","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_concrete_dc_gui;
        track_overlay: sw_scotch_3_overlay;
        underlay: sw_scotch_3_underlay;
        tunnels: sw_scotch_tunnel_urban;
        tunnel_overlay: sw_tunnel_urban_overlay;
        depots: sw_depot_scotch_3;
        bridge_surfaces: sw_scotch_3_bridge;
        level_crossings: sw_standard_crossing_urban;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_3;
    }
}}
# 58 "src/index.pnml" 2

# 1 "src/rails/shinkansen/gfx_shin.pnml" 1


    spriteset(sw_shin_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_conc_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_shin_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_conc.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_shin_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_conc.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_shin_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_shin_1_underlay_snow;
        sw_shin_1_underlay_def;
      }

    spriteset(sw_shin_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_conc.png") {
      tmpl_bridge_surface (0, 80)
    }


    spriteset(sw_shin_2_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_urban_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_shin_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_urban.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_shin_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_urban.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_shin_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_shin_2_underlay_snow;
        sw_shin_2_underlay_def;
      }

    spriteset(sw_shin_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/shinkansen/shin_urban.png") {
      tmpl_bridge_surface (0, 80)
    }
# 60 "src/index.pnml" 2
# 1 "src/rails/shinkansen/shin_1.pnml" 1
if (param_tracks_6==1){
item(FEAT_RAILTYPES, track_shin_1, 32) {
    property {
        label: "SAAE";
        introduction_date: date(1959, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_SNIN)));
        new_engine_text: string(STR_SNIN);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_SNIN)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 285 km/h;
        construction_cost: 20;
        maintenance_cost: 20;
        sort_order: 32;
        map_colour: 153;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
        compatible_railtype_list:
        ["JSH1","JSH2","JSH3",
        "JSA1","JSA2","JSA3",
        "JSV1","JSV2","JSV3",
        "JUN1","ELRL","SAAE","HSSN"
        ];
        powered_railtype_list:
        ["JSH1","JSH2","JSH3",
        "JSA1","JSA2","JSA3",
        "JSV1","JSV2","JSV3",
        "JUN1","ELRL","SAAE","HSSN"
        ];
    }

    graphics {
        gui: sw_concrete_ac_gui;
        track_overlay: sw_shin_1_overlay;
        underlay: sw_shin_1_underlay;
        tunnels: sw_shin_tunnel_arch_underlay;
        tunnel_overlay: sw_shin_tunnel_arch_overlay;
        depots: sw_depot_shin_1;
        bridge_surfaces: sw_shin_1_bridge;

        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_3;
        fences: sw_param_fence_standard_2;
    }
}}
# 61 "src/index.pnml" 2
# 1 "src/rails/shinkansen/shin_2.pnml" 1
if (param_tracks_6==1){
item(FEAT_RAILTYPES, track_shin_2, 33) {
    property {
        label: "JSH2";
        introduction_date: date(1980, 1, 1);
        name: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        menu_text: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        toolbar_caption: string(STR_AC,string(STR_TRACK,string(STR_SNIN)));
        build_window_caption: string(STR_AC,string(STR_PURCHASE, string(STR_SNIN)));
        new_engine_text: string(STR_SNIN);
        autoreplace_text: string(STR_AC,string(STR_REPLACE, string(STR_SNIN)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 0 km/h;
        construction_cost: 22;
        maintenance_cost: 19;
        sort_order: 33;
        map_colour: 153;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
        compatible_railtype_list:
        ["JSH1","JSH2","JSH3",
        "JSA1","JSA2","JSA3",
        "JSV1","JSV2","JSV3",
        "JUN1","ELRL","SAAE","HSSN"
        ];
        powered_railtype_list:
        ["JSH1","JSH2","JSH3",
        "JSA1","JSA2","JSA3",
        "JSV1","JSV2","JSV3",
        "JUN1","ELRL","SAAE","HSSN"
        ];
    }

    graphics {
        gui: sw_concrete_ac_gui;
        track_overlay: sw_shin_2_overlay;
        underlay: sw_shin_2_underlay;
        tunnels: sw_shin_tunnel_square_underlay;
        tunnel_overlay: sw_shin_tunnel_square_overlay;
        depots: sw_depot_shin_2;
        bridge_surfaces: sw_shin_2_bridge;

        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_3;
        fences: sw_param_fence_standard_3;
    }
}}
# 62 "src/index.pnml" 2

# 1 "src/rails/dualgauge/gfx_dualgauge.pnml" 1


    spriteset(sw_dualgauge_1_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/dualgauge/dual_wood_snow.png") {
      tmpl_underlay (0, 40)
    }

      spriteset(sw_dualgauge_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/dualgauge/dual_wood.png") {
          tmpl_overlay (0, 0)
      }


      spriteset(sw_dualgauge_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/dualgauge/dual_wood.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_dualgauge_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_dualgauge_1_underlay_snow;
        sw_dualgauge_1_underlay_def;
      }

    spriteset(sw_dualgauge_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/dualgauge/dual_wood.png") {
      tmpl_bridge_surface (0, 80)
    }
# 64 "src/index.pnml" 2
# 1 "src/rails/dualgauge/dualgauge_1.pnml" 1

item(FEAT_RAILTYPES, track_dualgauge_1, 34) {
    property {
        label: "JDG1";
        introduction_date: date(1850, 1, 1);
        name: string(STR_TRACK,string(STR_DUAL_G));
        menu_text: string(STR_TRACK,string(STR_DUAL_G));
        toolbar_caption: string(STR_TRACK,string(STR_DUAL_G));
        build_window_caption: string(STR_PURCHASE, string(STR_DUAL_G));
        new_engine_text: string(STR_DUAL_G);
        autoreplace_text: string(STR_REPLACE, string(STR_DUAL_G));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 14;
        maintenance_cost: 12;
        sort_order: 34;
        map_colour: 67;


        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JUN1","JDG2","JDG3"];
        powered_railtype_list: ["JDG1","JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_ne_gui;
        track_overlay: sw_dualgauge_1_overlay;
        underlay: sw_dualgauge_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_dualgauge_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_2;
        fences: sw_param_fence_standard_1;
    }
}
# 65 "src/index.pnml" 2
# 1 "src/rails/dualgauge/dualgauge_2.pnml" 1

item(FEAT_RAILTYPES, track_dualgauge_2, 35) {
    property {
        label: "JDG2";
        introduction_date: date(1900, 1, 1);
        name: string(STR_DUAL,string(STR_TRACK,string(STR_DUAL_G)));
        menu_text: string(STR_DUAL,string(STR_TRACK,string(STR_DUAL_G)));
        toolbar_caption: string(STR_DUAL,string(STR_TRACK,string(STR_DUAL_G)));
        build_window_caption: string(STR_DUAL,string(STR_PURCHASE, string(STR_DUAL_G)));
        new_engine_text: string(STR_DUAL_G);
        autoreplace_text: string(STR_DUAL,string(STR_REPLACE, string(STR_DUAL_G)));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 130 km/h;
        construction_cost: 18;
        maintenance_cost: 15;
        sort_order: 35;
        map_colour: 67;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","SAAE","JSH1","JSH2","JSH3","JST1","JST2","JSL1","JSL2","JUN1","JDG2","JDG3"];
        powered_railtype_list: ["JDG2","JDG3","JUN1"];
    }

    graphics {
        gui: sw_wooden_acdc_gui;
        track_overlay: sw_dualgauge_1_overlay;
        underlay: sw_dualgauge_1_underlay;
        tunnels: sw_standard_tunnel_square_underlay;
        tunnel_overlay: sw_standard_tunnel_square_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_dualgauge_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_catenary_wire;
        catenary_pylons: sw_pylons_1;
        fences: sw_param_fence_standard_1;
    }
}
# 66 "src/index.pnml" 2

# 1 "src/rails/guideway/gfx_guideway.pnml" 1






      spriteset(sw_guideway_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/guideway/guideway.png") {
          tmpl_overlay (0, 0)
      }


      spriteset(sw_guideway_1_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/guideway/guideway.png") {
          tmpl_underlay (0, 40)
      }





    spriteset(sw_guideway_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/guideway/guideway.png") {
      tmpl_bridge_surface (0, 80)
    }
# 68 "src/index.pnml" 2
# 1 "src/rails/guideway/guideway_1.pnml" 1

item(FEAT_RAILTYPES, track_guideway_1, 36) {
    property {
        label: "JGW1";
        introduction_date: date(1977, 1, 1);
        name: string(STR_TRACK,string(STR_GUIDEWAY));
        menu_text: string(STR_TRACK,string(STR_GUIDEWAY));
        toolbar_caption: string(STR_TRACK,string(STR_GUIDEWAY));
        build_window_caption: string(STR_PURCHASE, string(STR_GUIDEWAY));
        new_engine_text: string(STR_GUIDEWAY);
        autoreplace_text: string(STR_REPLACE, string(STR_GUIDEWAY));

        station_graphics: RAILTYPE_STATION_MAGLEV;
        acceleration_model: ACC_MODEL_MONORAIL;
        speed_limit: 70 km/h;
        construction_cost: 10;
        maintenance_cost: 9;
        sort_order: 36;

        railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
        compatible_railtype_list: ["JGW1","JGW2","JUN1"];
        powered_railtype_list: ["JGW1","JGW2","JUN1"];
    }

    graphics {
        gui: sw_wooden_ac_gui;
        track_overlay: sw_guideway_1_overlay;
        underlay: sw_guideway_1_underlay;
        tunnels: sw_standard_tunnel_arch_underlay;
        tunnel_overlay: sw_standard_tunnel_arch_overlay;
        depots: sw_depot_standard_1;
        bridge_surfaces: sw_guideway_1_bridge;
        level_crossings: sw_standard_crossing_wood;
        catenary_wire: sw_guideway_cover;
        catenary_pylons: sw_pylons_empty;
        fences: sw_param_fence_standard_1;
    }
}
# 69 "src/index.pnml" 2

# 1 "src/rails/universal.pnml" 1
        item(FEAT_RAILTYPES, track_universal, 38) {
            property {
                label: "JUN1";
                introduction_date: date(0001, 1, 1);
                name: string(STR_TRACK,string(STR_UNIVERSAL));
                menu_text: string(STR_TRACK,string(STR_UNIVERSAL));
                toolbar_caption: string(STR_TRACK,string(STR_UNIVERSAL));
                build_window_caption: string(STR_PURCHASE, string(STR_UNIVERSAL));
                new_engine_text: string(STR_UNIVERSAL);
                autoreplace_text: string(STR_REPLACE, string(STR_UNIVERSAL));

                station_graphics: RAILTYPE_STATION_NORMAL;
                acceleration_model: ACC_MODEL_RAIL;
                speed_limit: 0 km/h;
                construction_cost: 26;
                maintenance_cost: 18;
                sort_order: 38;
                map_colour: 15;

                railtype_flags: bitmask(RAILTYPE_FLAG_CATENARY);
                compatible_railtype_list: ["JSN1","JSN2","JSN3","RAIL","ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","JNN1","JNN2","JNN3","NAAN","NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JSC1","JSC2","JSC3","JST1","JST2","JSL1","JSL2","JDG1","JDG2","JDG3","JUN1"];
                powered_railtype_list: ["JSN1","JSN2","JSN3","RAIL","ELRL","JSD1","JSD2","JSD3","JSV1","JSV2","ELRL","JSA1","JSA2","JSA3","JSV1","JSV2","ELRL","JNN1","JNN2","JNN3","NAAN","NABE","JND1","JND2","JND3","JNV1","JNV2","NABE","JNA1","JNA2","JNA3","JNV1","JNV2","NABE","JSC1","JSC2","JSC3","JST1","JST2","JSL1","JSL2","JDG1","JDG2","JDG3","JUN1"];
            }

            graphics {
                gui: sw_concrete_ne_gui;
                track_overlay: sw_scotch_1_overlay;
                underlay: sw_scotch_1_underlay;
                tunnels: sw_narrow_tunnel_urban;
                tunnel_overlay: sw_tunnel_urban_overlay;
                depots: sw_depot_scotch_1;
                bridge_surfaces: sw_scotch_1_bridge;
                level_crossings: sw_standard_crossing_1;
                catenary_wire: sw_fake_track_grass;
                catenary_pylons: sw_pylons_empty;
                fences: gfx_fence_0;
            }
        }
# 71 "src/index.pnml" 2

# 1 "src/rails/deco/gfx_deco.pnml" 1

    spriteset(sw_deco_underlay_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_snow.png") {
      tmpl_underlay (0, 40)
    }


      spriteset(sw_deco_1_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_1.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_deco_1_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_1.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_deco_1_underlay, terrain_type) {
        TILETYPE_SNOW: sw_deco_underlay_snow;
        sw_deco_1_underlay_def;
      }

    spriteset(sw_deco_1_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_1.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_deco_2_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_2.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_deco_2_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_2.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_deco_2_underlay, terrain_type) {
        TILETYPE_SNOW: sw_deco_underlay_snow;
        sw_deco_2_underlay_def;
      }

    spriteset(sw_deco_2_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_2.png") {
      tmpl_bridge_surface (0, 80)
    }


      spriteset(sw_deco_3_overlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_3.png") {
          tmpl_overlay (0, 0)
      }

      spriteset(sw_deco_3_underlay_def, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_3.png") {
          tmpl_underlay (0, 40)
      }
      switch(FEAT_RAILTYPES, SELF, sw_deco_3_underlay, terrain_type) {
        TILETYPE_SNOW: sw_deco_underlay_snow;
        sw_deco_3_underlay_def;
      }

    spriteset(sw_deco_3_bridge, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/rails/deco/deco_3.png") {
      tmpl_bridge_surface (0, 80)
    }
# 73 "src/index.pnml" 2
# 1 "src/rails/deco/deco_1.pnml" 1
if (param_tracks_11==1){
item(FEAT_RAILTYPES, track_deco_1, 39) {
    property {
        label: "JEC1";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DECO_1);
        menu_text: string(STR_DECO_1);
        toolbar_caption: string(STR_DECO_1);
        build_window_caption: string(STR_PURCHASE, string(STR_DECO_1));
        new_engine_text: string(STR_DECO_1);
        autoreplace_text: string(STR_REPLACE, string(STR_DECO_1));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 0 km/h;
        construction_cost: 1;
        maintenance_cost: 1;
        sort_order: 39;

        railtype_flags: bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
        compatible_railtype_list: ["JEC1"];
        powered_railtype_list: ["JEC1"];
    }

    graphics {
        gui: sw_deco_1_gui;
        track_overlay: sw_deco_1_overlay;
        underlay: sw_deco_1_underlay;



        bridge_surfaces: sw_deco_1_bridge;



        fences: sw_param_fence_standard_1;
    }
}}
# 74 "src/index.pnml" 2
# 1 "src/rails/deco/deco_2.pnml" 1
if (param_tracks_11==1){
item(FEAT_RAILTYPES, track_deco_2, 40) {
    property {
        label: "JEC2";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DECO_2);
        menu_text: string(STR_DECO_2);
        toolbar_caption: string(STR_DECO_2);
        build_window_caption: string(STR_PURCHASE, string(STR_DECO_2));
        new_engine_text: string(STR_DECO_2);
        autoreplace_text: string(STR_REPLACE, string(STR_DECO_2));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 0 km/h;
        construction_cost: 1;
        maintenance_cost: 1;
        sort_order: 40;

        railtype_flags: bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
        compatible_railtype_list: ["JEC2"];
        powered_railtype_list: ["JEC2"];
    }

    graphics {
        gui: sw_deco_2_gui;
        track_overlay: sw_deco_2_overlay;
        underlay: sw_deco_2_underlay;



        bridge_surfaces: sw_deco_2_bridge;



        fences: sw_param_fence_standard_1;
    }
}}
# 75 "src/index.pnml" 2
# 1 "src/rails/deco/deco_3.pnml" 1
if (param_tracks_11==1){
item(FEAT_RAILTYPES, track_deco_3, 41) {
    property {
        label: "JEC3";
        introduction_date: date(0001, 1, 1);
        name: string(STR_DECO_3);
        menu_text: string(STR_DECO_3);
        toolbar_caption: string(STR_DECO_3);
        build_window_caption: string(STR_PURCHASE, string(STR_DECO_3));
        new_engine_text: string(STR_DECO_3);
        autoreplace_text: string(STR_REPLACE, string(STR_DECO_3));

        station_graphics: RAILTYPE_STATION_NORMAL;
        acceleration_model: ACC_MODEL_RAIL;
        speed_limit: 0 km/h;
        construction_cost: 1;
        maintenance_cost: 1;
        sort_order: 41;

        railtype_flags: bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
        compatible_railtype_list: ["JEC3"];
        powered_railtype_list: ["JEC3"];
    }

    graphics {
        gui: sw_deco_3_gui;
        track_overlay: sw_deco_3_overlay;
        underlay: sw_deco_3_underlay;



        bridge_surfaces: sw_deco_3_bridge;



        fences: sw_param_fence_standard_1;
    }
}}
# 76 "src/index.pnml" 2
